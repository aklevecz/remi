---

interface Props {
  key: string;
  painting: any;
}

let { key, painting } = Astro.props;
// const R2 = Astro.locals.runtime.env.R2;
// let painting:any = null;
// if (process.env.NODE_ENV === "production") {
//   painting = await R2.get(key);
// } else {
//   painting = await fetch("http://localhost:8787/remi/" + encodeURIComponent(key)).then((r) => r.json());
// }
// console.log(painting)
// const metaData = painting.customMetadata;
// console.log(metaData);
// console.log(metaData)
// console.log(painting);
const { title, material, dimensions, year, updatedAt } = painting;

const isProd = process.env.NODE_ENV;
const imgHost = isProd ? "https://storage.remifrogo.art" : "http://localhost:4321/img";
let src = imgHost + "/" + key;
// if (process.env.NODE_ENV === "development") {
//     src = "https://storage.remifrogo.art/paintings/lamb-city-1713209386638";
// }
const imgUrl = "https://baos.haus/cdn-cgi/image/width=400,quality=100/" + src + `?time=${updatedAt.getTime()}`;
---

<div id={key} class="art-piece">
  <a id={key} class="art-piece-wrapper" href={`/art/${key}`}>
    <img
      loading="lazy"
      data-src={src}
      data-iso={updatedAt.getTime().toString()}
      data-key={key}
      src={imgUrl}
      alt={title + " new?"}
    />
  </a>
  <!-- <LoadingSpinner visibility="show" /> -->
  <div class="description-section">
    <div class="art-piece-title description">{title}</div>
    <div class="description">{material}</div>
    <div class="description">{dimensions !== "null" ? dimensions : ""}</div>
    <div class="description">{year}</div>
  </div>
</div>
<!-- </div> -->
<script>
  const images = document.querySelectorAll("img");
  const LAPTOP_WIDTH = 400;
  images.forEach((image: any) => {
    const isMobile = window.innerWidth < 768;
    image.onload = () => {
      // image.onload = null; 
      const aspect = image.naturalWidth / image.naturalHeight;
      let width;
      let height;
      if (isMobile) {
        width = window.innerWidth - window.innerWidth * 0.2;
        height = width / aspect;
      } else {
        width = LAPTOP_WIDTH;
        height = width / aspect;
      }
      image.style.height = height + "px";
      image.style.width = width + "px";
      // image.src = `https://baos.haus/cdn-cgi/image/width=${width},height=${height},quality=100/${image.dataset.src}?time=${image.dataset.iso}`;
    };
  });
</script>
<style>
  .art-piece {
    height: 90vh;
    display: flex;
    padding-top: 2rem;
    display: flex;
    flex-direction: column;
    flex: 1 0 auto;
  }

  .marker {
    width: 10px;
    height: 10px;
    background-color: black;
    top: -10px;
    position: absolute;
    top: -10px;
    opacity: 0;
  }

  .img-wrapper {
    display: block;
    margin: 40px auto;
  }
  img {
    margin: 0 auto;
    width: 100%;
  }
  .desk {
    display: none;
  }

  .title {
    margin-bottom: 1rem;
  }

  .art-piece img {
    box-shadow: 10px 10px 30px hsl(0, 0%, 73%);
  }

  .description-section {
    justify-content: space-between;
    gap: 1rem;
    max-width: 400px;
    padding-top: 10px;
    font-size: 0.75rem;
  }

  .art-piece-title {
    font-size: 1rem;
    font-weight: 600;
  }

  .description {
    color: black;
  }

  .description:nth-child(2) {
  }

  @media screen and (min-width: 768px) {
    .desk {
      display: block;
    }
    .mobile {
      display: none;
    }
    .art-piece {
      flex-direction: row;
      /* flex: 1 0 auto */
      margin-left: 100px;
      padding: 2rem 0rem;
    }

    .art-piece-wrapper {
      flex: 0 1 70%;
      flex-direction: row;
    }
    .img-wrapper {
      margin: 0 auto;
      /* width: 800px; */
    }
    .description-section {
      padding-top: 0px;
      flex: 1 1 20%;
      /* padding-right: 100px; */
      width: 100px;
      font-size: 1.25rem;
      text-wrap: balance;
    }
    .art-piece-title {
      font-size: 1.5rem;
    }
  }
</style>
