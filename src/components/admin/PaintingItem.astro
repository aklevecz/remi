---
import { Image } from "astro:assets";
import { genImgResizeUrl } from "../../lib/utils";

const env = process.env.NODE_ENV;
// const imgHost = env === "production" ? "https://storage.remifrogo.art" : "http://localhost:4321/img";
const imgHost =  "https://storage.remifrogo.art"

const { painting } = Astro.props;

const {key, title, material, dimensions, year, rank, updatedAt} = painting
//      src={}
const imageUrl = `${imgHost}/${key}?time=${updatedAt.getTime()}`

---

<div class="painting-container" id={key} draggable="true">
  <div class="painting-view">
    <img class="painting"
    src={genImgResizeUrl({width:300,height:"auto", quality:100,url:imageUrl})}
      alt={key}
    />
    <!-- <div>
      <h1>{title}</h1>
      <h2>{key}</h2>
      <p>{material}</p>
      <p>{dimensions}</p>
      <p>{year}</p>
    </div> -->

    <a href={`/admin?action=del&key=${key}`}>DELETE</a>
    <button id="edit-button">EDIT</button>
  </div>
  <form method="POST" class="hidden" enctype="multipart/form-data">
    <input type="hidden" name="type" value="painting" />
    <input type="hidden" name="key" value={key} />
    <input type="text" name="title" value={title} />
    <input type="text" name="material" value={material} />
    <input type="text" name="dimensions" value={dimensions} />
    <input type="text" name="year" value={year} />
    <input type="text" name="rank" value={rank} />
    <img class="img-preview">
    <input class="img-input" type="file" name="image" accept="image/*" />
    <button type="submit">Save</button>
  </form>
</div>
<script define:vars={{ key }}>
  const container = document.getElementById(`${key}`);
  container.querySelector("#edit-button").addEventListener("click", () => {
    container.querySelector("form").classList.toggle("hidden");
  });

  const form = container.querySelector("form");
    form.addEventListener("submit", async (e) => {
      const loadingOverlay = document.querySelector("[data-overlay-loading")
      loadingOverlay.style.display = "block";
    });

    const imageInput = container.querySelector('.img-input');
  const imagePreview = container.querySelector('.img-preview');

  imageInput.addEventListener('change', (event) => {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        imagePreview.src = e.target.result;
      };
      reader.readAsDataURL(file);
    }
  })
  // const draggableElement = container.querySelector('[draggable="true"]')
  // draggableElement.addEventListener('dragstart', (event) => {
  //   event.dataTransfer.setData('text/plain', event.target.id);
  // });
</script>
<style>
  .painting-container {
    width: 300px;
    height: 300px;
  }
  .painting {
    /* width:100px; */
    width: 300px;
    height: 250px;
    object-fit: contain;
  }
  .painting-view {
    display: flex;
    flex-direction: column;
  }
  img.img-preview {
    width:100px;
    height:100px;
  }
  a {
    box-sizing: border-box;
    background-color: red;
    color: white;
    font-size: 1.25rem;
  }
  .hidden {
    display: none;
  }
  form {
    width: 300px;
  }
</style>
