---
const { paintings } = Astro.props;
---

<button id="show-link-button">Show titles</button>

<div class="art-piece-titles">
  {
    paintings.map((painting: any) => {
      return (
        <button
          class="link-button offscreen"
          data-art={painting.key}
          onclick={`location.hash = "#${painting.key}-marker"`}
        >
          {painting.key.replace("paintings/", "").split("-").slice(0, -1).join(" ")}
        </button>
      );
    })
  }
</div>
<script>
  const isMobile = window.innerWidth < 768;
  const artPieceTitles = document.querySelector(".art-piece-titles") as HTMLDivElement;
  const linkButtons = document.querySelectorAll(".link-button");
  const showLinkButton = document.querySelector("#show-link-button") as HTMLButtonElement;
  function showLinkButtons() {
    let isHidden = true;
    linkButtons.forEach((linkButton) => {
      linkButton.classList.toggle("offscreen");
      if (!linkButton.classList.contains("offscreen")) {
        isHidden = false;
      }
      showLinkButton.innerText = isHidden ? "Show titles" : "Hide titles";
      setTimeout(() => {
        artPieceTitles.style.overflow = isHidden ? "hidden" : "scroll"; // Add this line
      }, 500);
    });
  }
  if (isMobile) {
    showLinkButton?.addEventListener("click", showLinkButtons);
    artPieceTitles.style.overflow = "hidden"
  } else {
    showLinkButtons();
  }
</script>
<style>
  #show-link-button {
    position: fixed;
    top: 10px;
    left: 4px;
    z-index: 999;
    text-decoration: underline;
  }
  .art-piece-titles {
    display: flex;
    flex-direction: column;
    align-items: start;
    top: 20px;
    position: sticky;
    position: fixed;
    padding: 1rem 0.3rem 0rem;
    background-color: var(--primary-color);
    background: none;
    width: 100%;
    overflow: scroll;
    max-height: 90vh;
    pointer-event: none;
    width: 50%;
    width: 300px;
    left: 0px;
  }

  button {
    background: none;
    border: none;
    color: black;
    font-size: 1.45rem;
    backdrop-filter: blur(3px);
  }
  .art-piece-titles .link-button {
    transform: translateX(0%);
    transition: transform 500ms;
  }

  .art-piece-titles .link-button.offscreen {
    transform: translateX(-120%);
  }

  .art-piece-titles .link-button.visible {
    color: var(--green);
  }

  @media screen and (min-width: 768px) {
    #show-link-button {
      display: none;
    }
    .art-piece-titles {
      display: flex;
      flex-direction: column;
      align-items: start;
      top: 0;
      position: sticky;
      padding-top: 3rem;
      flex: 0 0 300px;
      width: unset;
    }
    .art-piece-titles .link-button {
      background: none;
      border: none;
      font-size: 1.5rem;
      color: black;
    }
  }
</style>
