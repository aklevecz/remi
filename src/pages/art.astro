---
import ArtPiece from "../components/ArtPiece.astro";
import ArtPieceR2 from "../components/ArtPieceR2.astro";
import ArtPieceTitles from "../components/ArtPieceTitles.astro";
import LoadingSpinner from "../components/LoadingSpinner.astro";
import PageHeading from "../components/PageHeading.astro";
import Layout from "../layouts/Layout.astro";

// const { data } = await fetch("http://localhost:8055/items/remi").then(
//   (response) => response.json()
// );
// console.log(data);
// const data = [
//   {
//     id: 2,
//     media: "64d0f868-efca-47b3-8e82-725c1a4d44b7",
//     name: "Lamb City",
//     description:
//       "Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city Lamb city ",
//   },
// ];
type ArtPiece = {
  name: string;
  description: string;
  src: string;
  media: string;
};
const data: ArtPiece[] = [
  {
    name: "Lamb City",
    description: "A beautiful painting depicting a cityscape with lambs.",
    src: "/src/assets/paintings/lambcityoil.jpg",
    media: "Oil on canvas, 24x36 inches",
  },
  {
    name: "Grass",
    description: "An abstract painting inspired by the beauty of grass.",
    src: "/src/assets/paintings/grass.jpg",
    media: "Acrylic on canvas, 24x36 inches",
  },
  {
    name: "Collage",
    description: "A mixed media artwork created using various materials.",
    src: "/src/assets/paintings/collage.jpg",
    media: "Mixed media, 24x36 inches",
  },
  {
    name: "Yellow Mask",
    description: "A vibrant painting featuring a yellow mask.",
    src: "/src/assets/paintings/yellowmask.jpg",
    media: "Acrylic on canvas, 24x36 inches",
  },
];

const R2 = Astro.locals.runtime.env.R2;

const paintings = await R2.list();
---

<Layout title="Art" seo={{ title: "Remi Frogo | Art" }}>
  <PageHeading>ART</PageHeading>
  <div class="container">
    <ArtPieceTitles paintings={paintings.objects} />
    <div class="art-piece-list">
      <!-- {data.map((d) => <ArtPiece name={d.name} description={d.description} src={d.src} media={d.media} />)} -->
      {paintings.objects.map((painting: any) => <ArtPieceR2 key={painting.key} />)}
    </div>
  </div>
</Layout>
<script>
  const images = document.querySelectorAll("img");

  images.forEach((image: any) => {
    const isMobile = window.innerWidth < 768;
    const aspect = image.naturalWidth / image.naturalHeight;
    let width;
    let height;
    if (isMobile) {
      width = window.innerWidth - window.innerWidth * 0.2;
      height = width / aspect;
    } else {
      width = 800;
      height = width / aspect;
    }
    image.style.height = height + "px";
    image.style.width = width + "px";
    image.src = `https://baos.haus/cdn-cgi/image/width=${width},height=${height},quality=100/${image.dataset.src}`;
  });

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(
      (entry) => {
        if (entry.isIntersecting) {
          history.replaceState(null, document.title, window.location.pathname + window.location.search);
          const currentArtPiece = entry.target.id;
          console.log("Current Art Piece:", currentArtPiece);
          document.querySelectorAll(".link-button").forEach((button: any) => button.classList.remove("visible"));
          const artLink = document.querySelector(`button[data-art="${currentArtPiece}"]`) as HTMLElement;
          artLink?.classList.add("visible");
          const sidebar = document.querySelector(".art-piece-titles") as HTMLElement;

          // Scroll the sidebar to the art link
          if (artLink && sidebar) {
            console.log(artLink.offsetTop, window.innerHeight);
            sidebar.scrollTop = artLink.offsetTop - window.innerHeight + 150
          }
          console.log(artLink);
          // Perform any desired actions with the current art piece
        }
      },
      { threshold: 0.8 }
    );
  });

  const artPieces = document.querySelectorAll(".art-piece");
  artPieces.forEach((artPiece) => {
    observer.observe(artPiece);
  });
</script>

<style>
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 1rem;
    padding-bottom: 5rem;

    /* background-color: red; */
  }

  .art-piece-list {
    /* margin-top: 2rem; */
    display: flex;
    flex-direction: column;
    /* max-width: 800px; */
    gap: 10rem;
    flex: 1 0 auto;
  }
  @media screen and (min-width: 768px) {
    .container {
      flex-direction: row;
      align-items: flex-start;
      justify-content: center;
    }

    .art-piece-list {
      margin-top: 2rem;
    }
  }
</style>
