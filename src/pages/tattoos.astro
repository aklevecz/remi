---
import { db, Appointment, User, eq } from "astro:db";
import TattooForm from "../components/TattooForm.astro";
import Layout from "../layouts/Layout.astro";

import { generateUUID } from "../lib/utils";

const info = {
  dayOf:
    "Please come hydated and well fed before the appointment. I would also prefer you not do drugs or drink heavily beforehand. The tattoo may take anywhere from 1-3 hours depending on the size and amount of detail. Plan your day accordingly <3",
  designs:
    "I have flash posted that you can look through on my instagram. If you have a custom request, pls make sure we discuss the idea before your appointment",
  deposit:
    "I ask that you send a $50 deposit to me through zelle (preferred): 714-808-7117 or Venmo: @remifrogo - if sending on venmo, please use an emoji for the description. Deposit goes towards total price of tattoo and is meant to secure your appointment spot. If you cancel the night before or day of, you will need to put down another deposit to reschedule.",
  pricing:
    "I have a minimum of $80. Most flash will be around $80-$250 depending on size and complexity. Custom pricing can be discussed beforehand. Please pay the full amount with either Zelle or cash on the day of the appointment",
};

type Values = {
  name: string;
  pronouns: string;
  instagram: string;
  email: string;
  tattooDescription: string;
  tattooPlacement: string;
  tattooSize: string;
  availability: string;
  miscellaneous: string;
  image: File | null;
};

let values: Values = {
  name: "",
  pronouns: "",
  instagram: "",
  email: "",
  tattooDescription: "",
  tattooPlacement: "",
  tattooSize: "",
  availability: "",
  miscellaneous: "",
  image: null,
};

const errors = [];

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    values.name = data.get("name") as string;
    values.pronouns = data.get("pronouns") as string;
    values.instagram = data.get("instagram") as string;
    values.email = data.get("email") as string;
    values.tattooDescription = data.get("tattoo-description") as string;
    values.tattooPlacement = data.get("tattoo-placement") as string;
    values.tattooSize = data.get("tattoo-size") as string;
    values.availability = data.get("availability") as string;
    values.miscellaneous = (data.get("miscellaneous") as string) || "";
    values.image = data.get("tattoo-image") as File;

    const {
      name,
      pronouns,
      instagram,
      email,
      tattooDescription,
      tattooPlacement,
      tattooSize,
      availability,
      image,
      miscellaneous,
    } = values;
    if (
      !name ||
      !pronouns ||
      !instagram ||
      !email ||
      !tattooDescription ||
      !tattooPlacement ||
      !tattooSize ||
      !availability ||
      !image ||
      image.size === 0
    ) {
      if (!name) errors.push("Name is required");
      if (!pronouns) errors.push("Pronouns are required");
      if (!instagram) errors.push("Instagram handle is required");
      if (!email) errors.push("Email is required");
      if (!tattooDescription) errors.push("Tattoo description is required");
      if (!tattooPlacement) errors.push("Tattoo placement is required");
      if (!tattooSize) errors.push("Tattoo size is required");
      if (!availability) errors.push("Availability is required");
      if (!image || image.size === 0) errors.push("Image is required");
      console.log(errors);
    } else {
      const R2 = Astro.locals.runtime.env.R2;
      const fileExtension = image.type.split("/")[1];
      const fileName = `${instagram}`;
      await R2.put(fileName, image, { contentType: image.type });
      const user = await db.select().from(User).where(eq(User.email, email));
      let userId = null;
      if (user.length > 0) {
        userId = user[0].id;
      } else {
        await db.insert(User).values([{ name, email, instagram, phoneNumber: "" }]);
        const user = await db.select().from(User).where(eq(User.email, email));
        userId = user[0].id;
      }
      const id = generateUUID();
      await db.insert(Appointment).values([
        {
          id,
          userId,
          name,
          pronouns,
          instagram,
          email,
          tattooDescription,
          tattooPlacement,
          tattooSize,
          availability,
          miscellaneous,
          imageSrc: instagram,
          createdAt: new Date(),
        },
      ]);
      return Astro.redirect(`/success/${id}`);
    }
  } catch (e) {
    console.log(e);
    errors.push("There was an error processing your request");
  }
}
---

<Layout title="Tats">
  <h1>Tats</h1>
  <h2>BOOKING POLICIES</h2>
  <p>$50 deposit is required to lock in the appointment - the deposit will go toward the cost of the tattoo!</p>
  <ul>
    <li>venmo: @remifrogo</li>
    <li>zelle: 7148087117</li>
  </ul>
  <p>
    feel free to contact me with any questions through DM @remb0tron on instagram {"<3"}
  </p>
  <TattooForm values={values} />
</Layout>
