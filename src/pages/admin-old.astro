---
import PageHeading from "../components/PageHeading.astro";
import PaintingList from "../components/admin/PaintingList.astro";
import TattooView from "../components/admin/TattooView.astro";
import Layout from "../layouts/Layout.astro";
import dbInstance from "../lib/db";

const R2 = Astro.locals.runtime.env.R2;

if (Astro.request.method === "POST") {
  const form = await Astro.request.formData();
  const title = form.get("title") as string;
  const material = form.get("material") as string;
  const dimensions = form.get("dimensions") as string;
  const year = form.get("year") as string;
  const rank = form.get("rank") as string;
  let image = form.get("image") as File;

  const dateTime = new Date().getTime();
  const fileName = form.get("key") as string || `paintings/${title.replace(/\s+/g, "-").toLowerCase()}-${dateTime}`;
  if (!image.size) {
    const object = await R2.get(fileName);
    image = object.body;
  }

  await R2.put(`${fileName}`, image, {
    contentType: image.type,
    customMetadata: { title, material, dimensions, rank, year },
  });
  await dbInstance.addOrUpdatePainting({ title, material, dimensions, year: parseInt(year), rank: parseInt(rank), key: fileName });
  return Astro.redirect("/admin");
}

// if (Astro.request.method === "DELETE") {
const url = new URLSearchParams(new URL(Astro.request.url).search);
const key = url.get("key") as string;
const action = url.get("action");
if (action == "del") {
  await R2.delete(key);
  await dbInstance.deletePainting(key)
  return Astro.redirect("/admin");
}
// if (action=='getMeta') {
//   const painting = await R2.get(key);
//   return JSON.stringify(painting.customMetadata);
// }
// }
// <div>{painting.customMetadata.description || "DESC"}</div>
// <div>{painting.customMetadata.material || "MATERIAL"}</div>
---

<Layout title="admin">
  <TattooView/>
  <PageHeading> Admin </PageHeading>
  <form method="POST" enctype="multipart/form-data">
    <label for="title">Title:</label>
    <input type="text" id="title" name="title" required />

    <label for="material">Material:</label>
    <input type="text" id="material" name="material" required />

    <label for="dimensions">Dimensions:</label>
    <input type="text" id="dimensions" name="dimensions" required />

    <label for="year">Year:</label>
    <input type="text" id="year" name="year" required />

    <label for="image">Image:</label>
    <input type="file" id="image" name="image" accept="image/*" required />

    <button type="submit">Upload</button>
  </form>
  <div id="drop-zone" style="width: 200px; height: 200px; border: 1px solid black;">Drop here</div>
  <div class="container">
    <PaintingList />
  </div>
</Layout>
<script>
  const buttons = document.querySelectorAll("button");
  buttons.forEach((button) => {
    button.addEventListener("click", async (e: any) => {
      const key = e.target.id;
      await fetch(`/admin?key=${key}`, { method: "DELETE" });
    });
  });

  const dropZone = document.getElementById("drop-zone") as HTMLElement;
  dropZone.addEventListener("dragover", (event) => {
    event.preventDefault(); // This is necessary to allow the drop
  });
  dropZone.addEventListener("drop", (event: any) => {
    event.preventDefault(); // This is necessary to prevent the browser's default handling of the data
    console.log(event);
    const id = event.dataTransfer.getData("text/plain");
    const draggableElement = document.getElementById(id) as HTMLElement;
    dropZone.appendChild(draggableElement);
  });
</script>

<style>
  .container {
    display: flex;
  }

  form {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    width: 300px;
  }
</style>
